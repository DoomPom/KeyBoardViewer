<Window x:Class="KeyBoardViewer.SettingForm"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:KeyBoardViewer"
        mc:Ignorable="d"
        Title="设置" Height="375" Width="600"
        Closing="Window_Closing" Loaded="Window_Loaded">
    <Window.Resources>
        <!--按键文本框-->
        <Style x:Key="KeyStyle" BasedOn="{StaticResource {x:Type TextBox}}" TargetType="TextBox" >
            <Setter Property="VerticalAlignment" Value="Stretch" />
            <Setter Property="HorizontalAlignment" Value="Stretch" />
            <Setter Property="Margin" Value="5,2,5,2" />
            <Setter Property="TextAlignment" Value="Center" />
            <Setter Property="VerticalContentAlignment" Value="Center" />
            <Setter Property="HorizontalContentAlignment" Value="Center" />
            <Setter Property="TextWrapping" Value="WrapWithOverflow" />
            <EventSetter Event="GotFocus" Handler="TextBox_GotFocus"  />
            <EventSetter Event="LostFocus" Handler="TextBox_LostFocus" />
            <EventSetter Event="PreviewKeyDown" Handler="TextBox_PreviewKeyDown" />
        </Style>
        <!-- 按键标题-->
        <Style x:Key="TitleStyle" TargetType="Label" BasedOn="{StaticResource {x:Type Label}}">
            <Setter Property="VerticalContentAlignment" Value="Center" />
            <Setter Property="HorizontalContentAlignment" Value="Center" />
            <Setter Property="FontSize" Value="16" />
            <Setter Property="FontWeight" Value="Bold" />
        </Style>

        <Style x:Key="RadioButton" TargetType="Button" BasedOn="{StaticResource {x:Type Button}}">
            <Setter Property="Margin" Value="5"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}" >
                        <Border x:Name="button"  Background="{TemplateBinding Background}" BorderThickness="1" CornerRadius="7">
                            <ContentPresenter Content="{TemplateBinding ContentControl.Content}" HorizontalAlignment="Center" VerticalAlignment="Center" />
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="button" Property="Background" Value="#fceeb9"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter TargetName="button" Property="Background" Value="#fae388"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        
        <Style x:Key="KeyItemStyle" TargetType="{x:Type ListBoxItem}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ListBoxItem}">
                        <Grid Height="30" x:Name="grid">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="1*"/>
                                <ColumnDefinition Width="2*"/>
                                <ColumnDefinition Width="2*"/>
                            </Grid.ColumnDefinitions>
                            <Label Content="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplatedParent.(ItemsControl.AlternationIndex)}" Style="{StaticResource TitleStyle}"  FontSize="14"/>
                            <TextBox Text="{Binding KeyStr0}" Style="{StaticResource KeyStyle}" Tag="0" Grid.Column="1"  />
                            <TextBox Text="{Binding KeyStr1}" Style="{StaticResource KeyStyle}" Tag="1" Grid.Column="2"  />
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter TargetName="grid" Property="Background" Value="#fceeb9"/>
                            </Trigger>
                            <Trigger Property="Selector.IsSelected" Value="true">
                                <Setter TargetName="grid" Property="Background" Value="#fae388"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <!--TargetType="{x:Type ListBoxItem}" -->
        <DataTemplate  x:Key="KeyItemData">
            <Grid Height="30" x:Name="grid">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="1*"/>
                        <ColumnDefinition Width="2*"/>
                        <ColumnDefinition Width="2*"/>
                    </Grid.ColumnDefinitions>
                    <!--
                <Label Content="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplatedParent.(ItemsControl.AlternationIndex)}" Style="{StaticResource TitleStyle}"  FontSize="14"/>
                -->
                <Label Content="{Binding ItemName}" Style="{StaticResource TitleStyle}"  FontSize="14"/>
                <TextBox Text="{Binding KeyStr0}" Style="{StaticResource KeyStyle}" Tag="{Binding Tag0,StringFormat={}}" Grid.Column="1"  />
                <TextBox Text="{Binding KeyStr1}" Style="{StaticResource KeyStyle}" Tag="{Binding Tag1,StringFormat={}}" Grid.Column="2"  />
                </Grid>
                <DataTemplate.Triggers>
                    <Trigger Property="IsMouseOver" Value="true">
                        <Setter TargetName="grid" Property="Background" Value="#fceeb9"/>
                    </Trigger>
                <!--  直接使用 IsSelected 没效果
                    <Trigger Property="Selector.IsSelected" Value="true">
                            <Setter TargetName="grid" Property="Background" Value="#fae388"/>
                    </Trigger>
                    -->
                    <DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type ListBoxItem}}, Path=IsSelected}" Value="True">
                    <Setter TargetName="grid" Property="Background" Value="#fae388"/>
                </DataTrigger>
            </DataTemplate.Triggers>
        </DataTemplate>
        
        <Style x:Key="KeyItemListStyle"  BasedOn="{StaticResource {x:Type ListBox}}" TargetType="ListBox">
            <Setter Property="VerticalAlignment" Value="Stretch" />
            <Setter Property="HorizontalAlignment" Value="Stretch" />
            <Setter Property="VerticalContentAlignment" Value="Center" />
            <Setter Property="HorizontalContentAlignment" Value="Stretch" />
            <Setter Property="Margin" Value="10,0,10,0" />
            <Setter Property="BorderThickness" Value="1" />
            <Setter Property="Background" Value="Transparent" />
        </Style>


    </Window.Resources>
    <Viewbox>
        <Grid x:Name="MainLayout" UseLayoutRounding="True"   Width="600"
          Margin="0,0,0,0" ScrollViewer.VerticalScrollBarVisibility="Disabled"
         Background="WhiteSmoke"  >
            <Grid.RowDefinitions>
                <RowDefinition Height="30" />
                <RowDefinition Height="1*" />
                <RowDefinition Height="40" />
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="1*" />
                <ColumnDefinition Width="2*" />
                <ColumnDefinition Width="2*" />
            </Grid.ColumnDefinitions>
            <Label  Content="类型" Style="{StaticResource TitleStyle}" />
            <Label Content="按键1" Grid.Column="1"   Style="{StaticResource TitleStyle}"/>
            <Label Content="按键2" Grid.Column="2"   Style="{StaticResource TitleStyle}"/>
            <!-- <ListBox x:Name="KeyItemList" Style="{StaticResource KeyItemListStyle}" ItemContainerStyle="{StaticResource KeyItemStyle}"
                      Grid.Row="1" Grid.ColumnSpan="3"  /> -->
            <ListBox x:Name="KeyItemList" Style="{StaticResource KeyItemListStyle}" ItemTemplate="{StaticResource KeyItemData}"
                  Grid.Row="1" Grid.ColumnSpan="3"  />
            <CheckBox x:Name="TopMost" Content="窗口置顶" IsChecked="True" Grid.Column="0" Grid.Row="2" 
                  HorizontalAlignment="Center" VerticalAlignment="Center"  Click="TopMost_Click" />
            <Button Content="恢复默认值"  Style="{StaticResource RadioButton}" Grid.Column="1" Grid.Row="2" Click="RebackDefault_Click"/>
            <Button Content="保存并关闭"  Style="{StaticResource RadioButton}" Grid.Column="2" Grid.Row="2" Click="Save_Click"/>
        </Grid>
    </Viewbox>
</Window>
