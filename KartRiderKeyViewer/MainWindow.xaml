<Window x:Class="KartRiderKeyViewer.MainWindowApp"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:KartRiderKeyViewer" xmlns:c="http://schemas.microsoft.com/netfx/2009/xaml/presentation"
        mc:Ignorable="d" 
        Title="MainWindow" Topmost="{Binding IsTopMost}"
        AllowsTransparency="True" Background="Transparent" WindowStyle="None" 
        HorizontalAlignment="Left" VerticalAlignment="Top" UseLayoutRounding="True" 
        SizeToContent="Manual" ShowInTaskbar="True" ResizeMode="CanResize" 
        Width="200" Height="100" 
        Loaded="Window_Loaded" Closing="Window_Closing" 
        MouseEnter="Window_MouseEnter" MouseLeave="Window_MouseLeave"  >
    <!--WindowChrome-->
    <WindowChrome.WindowChrome>
        <WindowChrome CaptionHeight="0" ResizeBorderThickness="10"/>
    </WindowChrome.WindowChrome>
    
    <Window.Resources>
        <local:HideByttonToStatueConverter x:Key="HideByttonToStatueConverter"/>
        
        <!--A Style that extends the previous TextBlock Style with an x:Key of TitleText-->
        <Style BasedOn="{StaticResource {x:Type ToggleButton}}" TargetType="ToggleButton" x:Key="StatueToggleButton">
            <Setter Property="VerticalAlignment" Value="Stretch"/>
            <Setter Property="Width" Value="76"/>
            <Setter Property="FontSize" Value="40"/>
            <Setter Property="FontWeight" Value="Bold"/>
            <Setter Property="Margin" Value="2,2,2,2"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Disabled"/>
            <Setter Property="OverridesDefaultStyle" Value="True" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ToggleButton">
                        <Border Name="border" BorderThickness="0" BorderBrush="Black" 
                                Background="{TemplateBinding Background}" CornerRadius="20" >
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsChecked" Value="True">
                                <Setter Property="Background" Value="Black" />
                                <Setter Property="Foreground" Value="White" />
                            </Trigger>
                            <Trigger Property="IsChecked" Value="False">
                                <Setter Property="Background" Value="LightGray" />
                                <Setter Property="Foreground" Value="Black" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style BasedOn="{StaticResource {x:Type Button}}" TargetType="Button" x:Key="SettingButton">
            <Setter Property="VerticalAlignment" Value="Stretch"/>
            <Setter Property="Width" Value="76"/>
            <Setter Property="FontSize" Value="40"/>
            <Setter Property="FontWeight" Value="Bold"/>
            <Setter Property="Margin" Value="2,2,2,2"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Disabled"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Name="border" BorderThickness="0" BorderBrush="Black" 
                                Background="{TemplateBinding Background}" CornerRadius="20" >
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="RenderTransformOrigin" Value="0.5,0.5" />
            <Setter Property="RenderTransform">
                <Setter.Value>
                    <RotateTransform Angle="0"/>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsPressed" Value="True">
                    <Setter Property="Background" Value="Black" />
                    <Setter Property="Foreground" Value="White" />
                </Trigger>
                <Trigger Property="IsMouseOver" Value="True">
                    <Trigger.EnterActions>
                        <BeginStoryboard>
                            <Storyboard>
                                <DoubleAnimation Storyboard.TargetProperty="(UIElement.RenderTransform).(RotateTransform.Angle)" 
                                                 Duration="00:00:00.400" To="180" >
                                    <DoubleAnimation.EasingFunction>
                                        <PowerEase Power="1" EasingMode='EaseIn'></PowerEase>
                                    </DoubleAnimation.EasingFunction>
                                </DoubleAnimation>
                                
                            </Storyboard>
                        </BeginStoryboard>
                    </Trigger.EnterActions>
                    <Trigger.ExitActions>
                        <BeginStoryboard>
                            <Storyboard>
                                <DoubleAnimation Storyboard.TargetProperty="(UIElement.RenderTransform).(RotateTransform.Angle)" 
                                                 Duration="00:00:00.400" >
                                    <DoubleAnimation.EasingFunction>
                                        <PowerEase Power="1" EasingMode='EaseOut' />
                                    </DoubleAnimation.EasingFunction>
                                </DoubleAnimation>
                            </Storyboard>
                        </BeginStoryboard>
                    </Trigger.ExitActions>
                </Trigger>
            </Style.Triggers>
        </Style>
        <Style BasedOn="{StaticResource StatueToggleButton}" TargetType="ToggleButton" x:Key="KeyStatueButton">
            <EventSetter Event="PreviewMouseDown" Handler="ToggleButton_Click"/>
            <EventSetter Event="PreviewMouseUp" Handler="ToggleButton_Click"/>

        </Style>
        <Style x:Key="CloseButtonStyle" BasedOn="{StaticResource {x:Type Button}}" TargetType="Button">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Background="{TemplateBinding Background}">
                            <ContentPresenter VerticalAlignment="Center" HorizontalAlignment="Center" />
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="False">
                    <Setter Property="Background" Value="{x:Null}" />
                </Trigger>
            </Style.Triggers>
        </Style>
    </Window.Resources>
    <Viewbox>
        <Grid x:Name="MainLayout" UseLayoutRounding="True" MinWidth="400" MinHeight="200"
          Margin="0,0,0,0" ScrollViewer.VerticalScrollBarVisibility="Disabled"  Background="Transparent" >
            <Grid.RowDefinitions>
                <RowDefinition Height="40"/>
                <RowDefinition Height="1*"/>
                <RowDefinition Height="1*"/>
            </Grid.RowDefinitions>
            <DockPanel x:Name="TitleBar" Margin="0,0,0,0" VerticalAlignment="Top" Grid.ColumnSpan="5" Height="40" LastChildFill="False"
                   Background="{DynamicResource {x:Static SystemColors.ActiveCaptionBrushKey}}" 
                   ScrollViewer.VerticalScrollBarVisibility="Disabled" Visibility="Hidden"
                       MouseLeftButtonDown="TitleBar_MouseLeftButtonDown">
                <TextBlock Text="用管理员权限打开"  Margin="5,5,0,5" FontSize ="20"/>
                <Button x:Name="CloseButton" Content="X" Style="{StaticResource CloseButtonStyle}" DockPanel.Dock="Right" 
                        FontSize ="20"
                        HorizontalContentAlignment="Center" VerticalContentAlignment="Center" 
                        ScrollViewer.VerticalScrollBarVisibility="Disabled" Width="80" Height="40" 
                        HorizontalAlignment="Right" Click="CloseButton_Click" Background="Red" />
            </DockPanel>
            <StackPanel Orientation="Horizontal" Grid.Row="1">
                <ToggleButton x:Name="Key_Shift" IsChecked="{Binding KeyShift,Mode=OneWay}" Content="Shift" Style="{StaticResource KeyStatueButton}" Width="116" />
                <ToggleButton x:Name="Key_X" IsChecked="{Binding KeyX,Mode=OneWay}" Content="X" Style="{StaticResource KeyStatueButton}"
                              Visibility="{Binding HideButton,Converter={StaticResource HideByttonToStatueConverter}}" >
                </ToggleButton>
                <ToggleButton x:Name="Key_Up" IsChecked="{Binding KeyUp,Mode=OneWay}" Content="▲" Style="{StaticResource KeyStatueButton}"  Margin="42,2,2,2"/>
                <Button x:Name="Setting" Content="⚙" Style="{StaticResource SettingButton}" 
                          Visibility="Visible"  Click="Setting_Click" >
                </Button>
            </StackPanel>
            <StackPanel Orientation="Horizontal" Grid.Row="2">

                <ToggleButton x:Name="Key_Ctrl" IsChecked="{Binding KeyCtrl,Mode=OneWay}" Content="Ctrl" Style="{StaticResource KeyStatueButton}" />
                <ToggleButton x:Name="Key_Alt" IsChecked="{Binding KeyAlt,Mode=OneWay}" Content="Alt" Style="{StaticResource KeyStatueButton}" 
                              Visibility="{Binding HideButton,Converter={StaticResource HideByttonToStatueConverter}}" />
                <ToggleButton x:Name="Key_Left" IsChecked="{Binding KeyLeft,Mode=OneWay}" Content="◀" Style="{StaticResource KeyStatueButton}" />
                <ToggleButton x:Name="Key_Down" IsChecked="{Binding KeyDown,Mode=OneWay}" Content="▼" Style="{StaticResource KeyStatueButton}"/>
                <ToggleButton x:Name="Key_Right" IsChecked="{Binding KeyRight,Mode=OneWay}" Content="▶" Style="{StaticResource KeyStatueButton}"  />

            </StackPanel>
        </Grid>
    </Viewbox>
</Window>
